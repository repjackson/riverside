template(name='transfers')
    .ui.stackable.padded.grid 
        .sixteen.wide.column
            .ui.inline.header 
                +i name='exchange'
                |#{artist_docs.count} transfers
            if current_search 
                i.large.red.circular.link.remove.icon.clear
            .ui.large.input 
                input.transfer_search(type='text' placeholder='search...' value=current_search)
        .four.wide.column.scrolling
            if currentUser
                .ui.header your points #{currentUser.points}
                a.ui.big.icon.button.new_transfer
                    i.big.green.plus.icon
            +i name='tags'
            each picked_transfers_tags
                button.ui.blue.compact.circular.button.unpick_tag(tabindex='0')
                    //- i.remove.icon
                    | #{this}
            each transfers_tag_results
                button.ui.circular.compact.black.button.pick_tag(tabindex="0" class=result_class title=count)
                    |#{name}
                    // small #{count}
        .twelve.wide.column
            unless one_result
                .ui.inline.header(title='result count') #{result_docs.count}
                // +search_input key='title'
                +session_icon_button key='view_mode' value='grid' icon='grid' 
                +session_icon_button key='view_mode' value='list' icon='list'
                
                +sort_direction_toggle
                // +sort_key_toggle
                +session_set key='sort_key' value='_timestamp' label='added' icon='clock'
                +session_set key='sort_key' value='points' label='points' icon='hashtag'
                +session_set key='sort_key' value='views' label='views' icon='eye'
                +session_set key='sort_key' value='intFormedYear' label='year started' icon='calendar'
                // +session_set key='limit' value=10
                // +session_set key='limit' value=25
                // +session_set key='limit' value=100
            .ui.hidden.divider
            if subs_ready
                if session_is 'view_mode' 'grid'
                    .ui.stackable.cards.scrolling.padding
                        if one_result
                            .ui.one.cards
                                each transfer_docs 
                                    +transfer_card
                        else
                            .ui.cards
                                each transfer_docs 
                                    +transfer_card
                else
                    .ui.large.divided.list 
                        each transfer_docs 
                            +transfer_item
            else 
                .ui.center.aligned.basic.segment
                    i.massive.yin.yang.loading.grey.icon


template(name='transfer_card')
    .card
        .content
            span(title='recipient')
                +i name='lend'
                with _target
                    +user_info
            .ui.header #{amount}pts
            .ui.label 
                i.user.icon
                |#{_author_username}
            each tags 
                .ui.label #{this}
            span.smallscroll
                |!{description}
            .ui.label #{_when}
            a.ui.icon.button.zoomer(href="/transfer/#{_id}")
                i.right.large.chevron.icon
template(name='transfer_item')
    .item
        .content
            span(title='recipient')
                +i name='lend'
                with _target
                    +user_info
            .ui.label 
                i.clock.icon
                |#{_when}
            .ui.label 
                i.user.icon
                |#{_author_username}
            span.smallscroll
                |!{description}
            a.ui.icon.button.zoomer(href="/transfer/#{_id}")
                i.right.large.chevron.icon

template(name='transfer_view')
    with current_doc
        .ui.stackable.padded.grid
            .centered.row 
                .five.wide.column
                    a(href="/user/#{_author.username}/points") 
                        img.ui.circular.centered.pointer.zoom.image(src="{{c.url _author.image_id height=500 width=500 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                        .ui.large.center.aligned.header.pointer.zoom
                            |#{_author.name}
                    .ui.huge.center.aligned.header
                        |#{amount}pts
                    if currentUser.admin_mode
                        +remove_button
                        a.ui.icon.button(href="/transfer/#{_id}/edit")
                            i.pencil.icon
                        +print_this
                    .f14
                        |!{content}
                    .spacer
                    
                    div 
                    if tags
                        i.tags.icon
                        each tags 
                            .ui.big.basic.circular.label #{this}
                    .ui.small.header
                        i.clock.icon
                        | #{_when}
                    .spacer
                    .spacer
                    +viewing_info
                    //- +array_view key='location_tags' label='location_tags' 
                .five.wide.column
                    a.fly_right(href="/user/#{_target.username}/points")
                        img.ui.circular.centered.fluid.pointer.zoom.image(src="{{c.url _target.image_id height=500 width=500 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                        .ui.large.center.aligned.header.pointer.zoom
                            |#{_target.name}
                                

template(name='transfer_edit')
    with current_doc
        .ui.stackable.padded.grid
            .row 
                .eight.wide.column
                    .ui.segment
                        .ui.inline.grey.header sender
                        .ui.inline.header
                            img.ui.small.image(src="{{c.url _author.image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                            |#{_author.name}
                    .ui.segment.alpha
                        +single_user_edit key='target' label='recipient' icon='donate' 
                    // +boolean_edit key='has_date' label='has date' icon='calendar' 
                    // if has_date
                    +date_edit key='date' label='date'    
                    // +boolean_edit key='has_time' label='has time' icon='clock' 
                    // if has_time
                    +time_edit key='time' label='time'    
                    +array_edit key='tags' label='tags' icon='tags' 
                    +array_edit key='location_tags' label='location tags' icon='marker' 
                    button.ui.red.button.cancel_transfer
                        i.large.remove.icon
                        |cancel
                .eight.wide.column
                    +html_edit key='description' label='description'
                    +image_edit key='image_id' label='image' icon='image'
                    .ui.big.header #{amount}pts
                    .ui.big.input
                        input.point_amount(type='number' value=amount min='1' max=point_max)
                    +key_value_edit key='amount' value=1
                    +key_value_edit key='amount' value=5
                    +key_value_edit key='amount' value=10
                    +key_value_edit key='amount' value=20
                    +key_value_edit key='amount' value=50
                    .spacer
                    .ui.center.aligned.basic.segment
                        if can_submit
                            .ui.green.huge.circular.button.submit
                                i.big.send.icon
                                |send
                        else 
                            .ui.green.huge.circular.disabled.button
                                i.send.big.icon
                                |send
                                
                                    


template(name='user_points')        
    .ui.inline.header 
        +i name='coins'
        |balance: #{current_user.points}
    .ui.label 
        |point ranking: #{point_ranking}
    .ui.label 
        |points made this week: #{weekly_earned}
    .ui.label 
        |points spent this week: #{weekly_spent}
    .ui.dividing.header
        +i name='internal'
        |points in
    .ui.selection.animated.link.list
        each points_in_docs
            a.item(href="/transfer/#{_id}/")
                .ui.inline.header #{body} 
                |#{amount}pts
                |#{_when}
                .ui.label 
                    |from 
                    |#{_author_username}
    .ui.dividing.header
        +i name='donate'
        |points out
    .ui.selection.animated.link.list
        each points_out_docs
            a.item(href="/transfer/#{_id}/")
                .ui.inline.header #{body} 
                |#{amount}pts
                |#{_when}
    .ui.dividing.header
        +i name='donate'
        |tips
    .ui.list
        each tips_docs
            a.item.fly_left(href="/#{_parent.model}/#{parent_id}")
                strong #{_parent.title} 
                small {amount}pts
    .ui.dividing.header 
        +i name='news'
        |posts
    .ui.small.header publish costs
    .ui.small.header earned points
    

    .ui.dividing.header 
        +i name='chat'
        |comments
    .ui.small.header 
        small comment amount:
        strong #{comment_count}
    .ui.small.header 
        small spent points:
        strong #{comment_total}
    // if venmo_image
    //     img.ui.image(src="{{c.url venmo_image }}")
            
